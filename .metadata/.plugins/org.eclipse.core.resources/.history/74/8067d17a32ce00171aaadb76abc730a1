package ronan_hanley.inside_av;

import ronan_hanley.inside_av.enemy.Enemy;

public class Explosion extends Entity{
	private double maxDamage;
	private double radius;
	
	/**
	 * Creates an explosion using two values.
	 * @param maxDamage The damage taken at the exact center
	 * of the explosion.
	 * @param radius The redius of the explosion. Zero damage
	 * will be taken at a distance of radius from the explosion.
	 */
	public Explosion(int x, int y, double maxDamage, double radius) {
		super(x, y);
		this.maxDamage = maxDamage;
		/* Convert the given radius to something we can use in our
		 * formula (y = -x^d + m)
		 * 
		 * d = log(base = radius, m)
		 */
		this.radius = logOfBase(radius, )
	}
	
	/**
	 * Damages an enemy based off this explosion.
	 * @param enemy The enemy to damage.
	 * @return True if the enemy died in this explosion.
	 */
	public boolean damageEnemy(Enemy enemy) {
		/* First find the distance from the center of the explosion
		 * to the enemy 
		 */
		double distance = Math.sqrt(Math.pow(getXExact() - enemy.getXExact(), 2)
								  + Math.pow(getYExact() - enemy.getYExact(), 2));
		
		
	}
	
	/**
	 * This method taken from:
	 * http://blog.dreasgrech.com/2010/02/finding-logarithm-of-any-base-in-java.html
	 */
	public static double logOfBase(int base, int num) {
	    return Math.log(num) / Math.log(base);
	}
	
}
