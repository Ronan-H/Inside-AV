package ronan_hanley.inside_av.weapons_systems;

import java.util.Random;

import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;

import ronan_hanley.inside_av.enemy.Enemy;

public class Rocket extends Projectile {
	public static final Image SPRITE;
	private Random random;
	private Enemy target;
	
	static {
		Image sprite = null;
		try {
			sprite = new Image("res/images/weapons/bullet/rocket.png", false, Image.FILTER_NEAREST);
		} catch (SlickException e) {
			e.printStackTrace();
		}
		
		SPRITE = sprite;
	}
	
	public Rocket(int x, int y, double speed, Enemy target) {
		super(x, y, 0, speed, SPRITE);
		this.target = target;
		
		// make the angle random
		setAngle(random.nextDouble() * (Math.PI * 2));
	}
	
	@Override
	public void update() {
		super.update();
		
		/* rockets should gradually turn towards the enemy,
		 * while going forward 
		 */
		
		/* first find the angle the rocket should get closer to
		 * (will be the angle between the rocket and the enemy) 
		 */
		// inverse tan is useful here
		double targetAngle = Math.atan2(target.getYExact() - getYExact(), target.getXExact() - getXExact());
	}
	
	@Override
	public int getDamage() {
		return 10;
	}

	@Override
	public int getHalfWidth() {
		return 2;
	}

	@Override
	public int getHalfHeight() {
		return 2;
	}
}
